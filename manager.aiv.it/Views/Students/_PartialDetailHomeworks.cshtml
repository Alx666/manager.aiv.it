@model manager.aiv.it.User




<!-- Accordion panel for Homeworks data -->
<div class="panel panel-default">
    <div class="panel-heading" role="tab" id="headingHomeworks">
        <h4 class="panel-title">
            <a role="button" data-toggle="collapse" href="#collapseHomeworks" aria-expanded="true" aria-controls="collapseHomeworks">
                Homeworks
            </a>
        </h4>
    </div>
    <div id="collapseHomeworks" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingHomeworks">
        <div class="panel-body">
            <div class="row">
                @{
                    var assignments = Model.Class.Assignments.Where(a => DateTime.Now.Date >= a.UnlockDate && DateTime.Now.Date <= a.Deadline.Date);
                }

                @if (assignments.Count() == 0)
                {
                    <div class="col-sm-12 col-md-12 col-xs-12" layout-align="center">
                        <h5>No results found.</h5>
                    </div>
                }

                @foreach (var item in assignments)
                {
                    Submission hSubmitted = (from s in item.Submissions where s.AssignmentId == item.Id && s.StudentId == Model.Id select s).FirstOrDefault();

                    var reviewed    = hSubmitted != null && hSubmitted.Revisor != null ? "followed" : "not-followed";
                    var icon        = reviewed == "followed" ? "glyphicon glyphicon-ok-circle" : "glyphicon glyphicon-remove-circle";

                    <div class="col-xs-12 col-sm-6 col-md-4">
                        <div class="thumbnail">

                            <div class="card-image">
                                <div class="card-quote lesson-follow-alert @reviewed">
                                    <i class="@icon pull-right"></i>
                                    <span>@Html.ActionLink(item.Exercise.Name, "Details", "Exercises", new { Id = item.Exercise.Id }, null)</span>
                                </div>
                            </div>
                            <div class="card-content">

                                <div class="row">
                                    <div class="col-sm-3"><label>Type</label></div>
                                    <div class="col-sm-9 text-right">@item.Exercise.Type.Name</div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-3"><label>Deadline</label></div>
                                    <div class="col-sm-9 text-right">@string.Format("{0} Days", (item.Deadline - item.UnlockDate).Days)</div>
                                </div>

                                <div class="row">
                                    @{                                                   
                                        if (hSubmitted == null)
                                        {
                                            <div class="col-sm-3"><label>Value</label></div>
                                            <div class="col-sm-9 text-right">@item.ExerciseValue</div>
                                        }
                                        else
                                        {
                                            <div class="col-sm-3"><label>Score</label></div>
                                            <div class="col-sm-9 text-right">@hSubmitted.Score / @item.ExerciseValue</div>
                                        }
                                    }
                                </div>


                                @if (hSubmitted != null && hSubmitted.Revisor != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-3"><label>Reviewer</label></div>
                                        <div class="col-sm-9 text-right">@hSubmitted.Revisor.DisplayName</div>
                                    </div>
                                }
                            </div>


                            @if (hSubmitted == null || hSubmitted != null && hSubmitted.Revisor == null)
                            {                            
                                <div class="card-footer">
                                <div class="row">
                                    <div class="col-sm-12 text-center">
                                        <form name="form_@item.Id" enctype="multipart/form-data" method="post" action="/Submissions/Upload">

                                            @{
                                                //  s.StudentId == Session.GetUser().Id
                                                Submission anySubmitted = (from s in Model.SubmissionsCreated
                                                                           where s.AssignmentId == item.Id
                                                                           select s).FirstOrDefault();
                                                bool bUploaded = anySubmitted != null;
                                                bool canUpload = ((Model.Id == Session.GetUser().Id) || Session.GetUser().IsTeacher || Session.GetUser().IsAdmin);

                                                string sInputId = $"Input{@item.Id}";
                                                string sOnChange = $"document.form_{@item.Id}.submit();";
                                                string sClass = (canUpload) ? (bUploaded ? "input-file-uploaded" : "input-file-not-uploaded") : "input-file-disabled";
                                                string sIcon = bUploaded ? "glyphicon-ok" : "glyphicon-cloud-upload";

                                                <input type="hidden" name="assignmentId" value=@item.Id />
                                                if (canUpload)
                                                {
                                                    <input type="file" id=@sInputId name="upload" class="inputfile" onchange=@sOnChange accept="@item.Exercise.Type.Extensions"/>
                                                }
                                                else
                                                {
                                                    <input type="file" id=@sInputId name="upload" class="inputfile" readonly disabled />
                                                }
                                                <label for=@sInputId class="btn btn-default action-button @sClass"><i class="glyphicon @sIcon"></i>Submit</label>
                                            }
                                        </form>

                                    </div>
                                </div>
                            </div>
                            }
                        </div>
                    </div>
                                                }
            </div>
        </div>
    </div>
</div>

