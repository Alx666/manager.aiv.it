@model manager.aiv.it.User

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="edit row">

        <div class="col-xs-12">

            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
            </div>

            <div class="row row-title">
                <div class="col col-xs-4 col-sm-2">
                    <div class="text-left">
                        <a class="btn btn-default" href="@Url.Action("Index")">
                            <i class="glyphicon glyphicon-chevron-left pull-left icon-left"></i>
                            <span>Back</span>
                        </a>
                    </div>
                </div>
                <div class="col col-xs-4 col-sm-8">
                    <span class="title">Edit Student</span>
                </div>
                <div class="col col-xs-4 col-sm-2">
                    <div class="text-right">

                        <button type="submit" class="btn btn-primary">
                            <i class="glyphicon glyphicon-floppy-disk pull-right icon-right"></i>
                            <span>Save</span>
                        </button>

                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col col-xs-12">

                    <div class="card">
                        <div class="card-image">

                            @{
                                if (Model.Picture != null && Model.Picture.Filename.EndsWith("png"))
                                {
                                    var base64 = Convert.ToBase64String(Model.Picture.Data);
                                    var imageSource = String.Format("data:image/png;base64,{0}", base64);
                                    <div class="picture-wrapper">
                                        <img id="preview" name="@Path.GetFileName(Model.Picture.Filename)" class="image-to-zoom" src="@imageSource" />
                                    </div>
                                }
                            }

                            <div class="card-quote">
                                <div class="row">
                                    <div class="col-md-4 col-md-offset-4 text-center" layout-align="center">
                                        <script type="text/javascript">
                                        var updatePreview = function (file) {
                                            var reader = new FileReader();
                                            reader.onload = function () {
                                                window.AIV.arrayBufferToImageSrc(this.result, "#preview");
                                            };
                                            reader.readAsArrayBuffer(file);
                                        };

                                        var updateFilename = function (file) {
                                            document.getElementById("uploadLabel").innerHTML = file.name;
                                        };

                                        var uploadNewPicture = function (file) {
                                            document.form_picture.submit();
                                        };

                                        var fileChanged = function (input) {
                                            if (input.files && input.files[0]) {
                                                var file = input.files[0];
                                                updatePreview(file);
                                                updateFilename(file);
                                                uploadNewPicture(file);
                                            }
                                        };
                                        </script>

                                        @if (Session.GetUser().Id == Model.Id)
                                        {
                                            using (Html.BeginForm("ChangePicture", "Students", null, FormMethod.Post, new { name = "form_picture", enctype = "multipart/form-data" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="userId" value="@Model.Id" />
                                                <input type="file" id="uploadPicture" name="picture" class="inputfile" onchange="fileChanged(this)" />
                                                <label style="width:100%;" id="uploadLabel" class="btn btn-danger" for="uploadPicture">Change/Upload Picture</label>
                                                @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                                            }
                                        }
                                        else if (Model.Picture == null || Model.Picture.Filename.EndsWith("png"))
                                        {
                                            <span>No picture</span>
                                        }
                                    </div>

                                </div>

                            </div>
                        </div>
                        <div class="card-content">
                            <div class="row">
                                <div class="col-xs-12">

                                    <!-- INFORMAZIONI ANAGRAFICHE -->
                                    <section>
                                        <h4 class="section-title">Anagrafica</h4>

                                        <div class="row">
                                            <div class="col col-md-2 col-xs-6">
                                                @Html.LabelFor(model => model.Name)
                                            </div>
                                            <div class="col col-xs-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col col-md-2 col-xs-6">
                                                @Html.LabelFor(model => model.Surname)
                                            </div>
                                            <div class="col col-xs-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col col-md-2 col-xs-6">
                                                @Html.LabelFor(model => model.Email)
                                            </div>
                                            <div class="col col-xs-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col col-md-2 col-xs-6">
                                                @Html.LabelFor(model => model.Password)
                                            </div>
                                            <div class="col col-xs-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col col-md-2 col-xs-6">
                                                @Html.LabelFor(model => model.Mobile)
                                            </div>
                                            <div class="col col-xs-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col col-md-2 col-xs-6">
                                                @Html.LabelFor(model => model.Class)
                                            </div>
                                            <div class="col col-xs-6">
                                                <div class="form-group">
                                                    @Html.DropDownList("ClassId", null, "-", htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </section>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}





