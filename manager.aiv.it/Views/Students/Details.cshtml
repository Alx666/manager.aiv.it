@model manager.aiv.it.User

@{
    ViewBag.Title = "Details";
}

<div class="details row">

    <div class="col-xs-12">
        <div class="row row-title">
            <div class="col col-xs-4 col-sm-2">
                @if (Session.GetUser() != null && !Session.GetUser().IsOnly(RoleType.Student))
                { 
                    <div class="text-left">
                        <a class="btn btn-default" href="@Url.Action("Index")">
                            <i class="glyphicon glyphicon-chevron-left pull-left icon-left"></i>
                            <span>Back</span>
                        </a>
                    </div>
                }
            </div>
            <div class="col col-xs-4 col-sm-8">
                <span class="title">@Model.DisplayName</span>
            </div>
            @if (Session.GetUser().IsSecretary || (Session.GetUser().IsStudent && Model.Id == Session.GetUser().Id))
            {
                <div class="col col-xs-4 col-sm-2">
                    <div class="text-right">
                        <a class="btn btn-primary" href="@Url.Action("Edit", new { id = Model.Id })">
                            <i class="glyphicon glyphicon-pencil pull-right icon-right"></i>
                            <span>Edit</span>
                        </a>
                    </div>
                </div>
            }
        </div>

        <div class="row">

            <div class="col col-xs-12">

                <div class="card">
                    <div class="card-image">

                        @{
                            if (Model.Picture != null)
                            {
                                var base64 = Convert.ToBase64String(Model.Picture.Data);
                                var imageSource = String.Format("data:image/*;base64,{0}", base64);
                                <div class="picture-wrapper">
                                    <img title="Click to zoom" id="preview" name="@Path.GetFileName(Model.Picture.Filename)" class="image-to-zoom" src="@imageSource" />
                                </div>
                            }
                        }

                        <div class="card-quote">
                            <div class="row">
                                <div class="col-md-4 col-md-offset-4 text-center" layout-align="center">
                                    <script type="text/javascript">
                                        var updatePreview = function (file) {
                                            var reader = new FileReader();
                                            reader.onload = function () {
                                                window.AIV.arrayBufferToImageSrc(this.result, "#preview");
                                            };
                                            reader.readAsArrayBuffer(file);
                                        };

                                        var updateFilename = function (file) {
                                            document.getElementById("uploadLabel").innerHTML = file.name;
                                        };

                                        var uploadNewPicture = function (file) {
                                            document.form_picture.submit();
                                        };

                                        var fileChanged = function (input) {
                                            if (input.files && input.files[0]) {
                                                var file = input.files[0];
                                                updatePreview(file);
                                                updateFilename(file);
                                                uploadNewPicture(file);
                                            }
                                        };
                                    </script>

                                    @if (Session.GetUser().Id == Model.Id)
                                    {
                                        using (Html.BeginForm("ChangePicture", "Students", null, FormMethod.Post, new { name = "form_picture", enctype = "multipart/form-data" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="userId" value="@Model.Id" />
                                            <input type="file" id="uploadPicture" name="picture" class="inputfile" onchange="fileChanged(this)" />
                                            <label style="width:100%;"  id="uploadLabel" class="btn btn-danger" for="uploadPicture">Change/Upload Picture</label>
                                            @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                                        }
                                    }
                                    else if (Model.Picture != null)
                                    {
                                        <div class="card-quote text-center">
                                            <a class="btn btn-primary btn-sm" href="@Url.Action("DownloadPicture", new { PictureId = Model.PictureId })">
                                                <i class="glyphicon glyphicon-floppy-save"></i>
                                                <span><strong>File: </strong>@Path.GetFileName(Model.Picture.Filename)</span>
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <span>No picture</span>
                                    }
                                </div>

                            </div>

                        </div>
                    </div>
                    <div class="card-content">
                        <div class="row">
                            <div class="col-xs-12">

                                <!-- INFORMAZIONI ANAGRAFICHE -->
                                <section>
                                    <h4 class="section-title">Base Data</h4>

                                    <div class="row">
                                        <div class="col col-xs-6">
                                            <span class="bold">@Html.DisplayNameFor(model => model.Name)</span>
                                        </div>
                                        <div class="col col-xs-6">
                                            @Html.DisplayFor(model => model.Name)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col col-xs-6">
                                            <span class="bold">@Html.DisplayNameFor(model => model.Surname)</span>
                                        </div>
                                        <div class="col col-xs-6">
                                            @Html.DisplayFor(model => model.Surname)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col col-xs-6">
                                            <span class="bold">@Html.DisplayNameFor(model => model.Email)</span>
                                        </div>
                                        <div class="col col-xs-6">
                                            @if (string.IsNullOrEmpty(Model.Email))
                                            {
                                                <span>&minus;</span>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.Email)
                                            }
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col col-xs-6">
                                            <span class="bold">@Html.DisplayNameFor(model => model.Mobile)</span>
                                        </div>
                                        <div class="col col-xs-6">
                                            @Html.DisplayFor(model => model.Mobile)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col col-xs-6">
                                            <span class="bold">@Html.DisplayNameFor(model => model.Class)</span>
                                        </div>
                                        <div class="col col-xs-6">
                                            @Html.DisplayFor(model => model.Class.DisplayName)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col col-xs-6">
                                            <span class="bold">@Html.DisplayNameFor(model => model.DisplayFrequency)</span>
                                        </div>
                                        <div class="col col-xs-6">
                                            @Html.DisplayFor(model => model.DisplayFrequency)
                                        </div>
                                    </div>
                                </section>

                                @if(Model.Class != null)
                                {
                                    <h4 class="section-title">Homeworks</h4>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <table class="table table-striped table-responsive table-hover">                 
                                                <tr>
                                                    <th style="width:50%">Name</th>
                                                    <th style="width:20%">Type</th>
                                                    <th style="width:10%">Deadline</th>
                                                    <th style="width:10%">Value</th>
                                                    <th style="width:10%">Submit</th>
                                                </tr>
                                                @foreach (var item in Model.Class.Assignments.Where(a => DateTime.Now.Date <= a.Deadline.Date))
                                                {
                                                    <tr>
                                                        <td>@Html.ActionLink(item.Exercise.Name, "Details", "Exercises", new { Id = item.Exercise.Id }, null)</td>
                                                        <td>@item.Exercise.Type.Name</td>
                                                        <td>@string.Format("{0} Days", (item.Deadline - item.UnlockDate).Days)</td>
                                                        <td>@item.ExerciseValue</td>
                                                        <td>
                                                            <form name="form_@item.Id" enctype="multipart/form-data" method="post" action="/Submissions/Upload">
                                                            
                                                                @{
                                                                    //  s.StudentId == Session.GetUser().Id
                                                                    Submission anySubmitted = (from s in Model.ExercisesSubmitted
                                                                                               where s.AssignmentId == item.Id
                                                                                               select s).FirstOrDefault();
                                                                    bool bUploaded = anySubmitted != null;
                                                                    bool canUpload = ((Model.Id == Session.GetUser().Id) || Session.GetUser().IsTeacher || Session.GetUser().IsAdmin);

                                                                    string sInputId = $"Input{@item.Id}";
                                                                    string sOnChange = $"document.form_{@item.Id}.submit();";
                                                                    string sClass = (canUpload) ? (bUploaded ? "input-file-uploaded" : "input-file-not-uploaded") : "input-file-disabled";
                                                                    string sIcon = bUploaded ? "glyphicon-ok" : "glyphicon-cloud-upload";

                                                                    <input type="hidden" name="assignmentId" value=@item.Id />
                                                                    if (canUpload)
                                                                    {
                                                                        <input type="file" id=@sInputId name="upload" class="inputfile" onchange=@sOnChange />
                                                                    }
                                                                    else
                                                                    {
                                                                        <input type="file" id=@sInputId name="upload" class="inputfile" readonly disabled />
                                                                    }
                                                                    <label for=@sInputId class="btn btn-default btn-sm action-button @sClass"><i class="glyphicon @sIcon"></i></label>
                                                                }
                                                            </form>
                                                        </td>
                                                    </tr>
                                                }
                                            </table>
                                        </div>
                                    </div>

                                    <h4 class="section-title">Missed Lessons</h4>
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <table class="table table-striped table-responsive table-hover">
                                                <tr>
                                                    <th style="width:50%">Date</th>
                                                    <th style="width:20%">Teacher</th>
                                                    <th style="width:20%">Topics</th>
                                                    <th style="width:10%">Details</th>
                                                </tr>
                                                @foreach (var item in Model.MissedLessons)
                                                {
                                                    <tr>
                                                        <td>
                                                            @item.Date.ToShortDateString()
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Teacher.DisplayName)
                                                        </td>
                                                        <td>
                                                            @foreach (var topic in item.Topics)
                                                            {
                                                                @Html.ActionLink(topic.DisplayName, "Details", "Topics", new { Id = topic.Id }, null)
                                                                <br />
                                                            }
                                                        </td>
                                                        <td>
                                                            <a class="btn btn-default btn-sm action-button" href="@Url.Action("Details", "Lessons", new { id = item.Id })"><i class="glyphicon glyphicon-chevron-right"></i></a>
                                                        </td>
                                                    </tr>
                                                }
                                            </table>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>