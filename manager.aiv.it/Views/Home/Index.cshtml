@model IEnumerable<manager.aiv.it.Submission>

@{
    ViewBag.Title = "Home";
}

<ul>
    <li>Inizializzazione DatePickers</li>
    <li>Student senza classe non può fare submissions</li>
    <li>Submit di uno studente da parte di un docente???</li>
    <li>Home/Index          => alla segretaria devono apparire lezioni</li>
    <li>Students/Index      => Disabilitare il pulsante "Registro" se non ci sono note</li>
    <li>Students/Details    => Fixare Upload Immagine</li>
    <li>Students/Details    => Crasha se non ha una classe</li>
    <li>Assignments/Index   => Mostrare assignments relativi alle proprie classi</li>
    <li>Exercises/Index     => Aggiungere campo per il docente che ha assegnato l'esercizio</li>
    <li>Exercises/Details   => Togliere anteprima</li>
    <li>Notes/Details       => Migliorare visualizzazione</li>
    <li>Submissions/Details </li>
    <li>1) Migliorare anteprima</li>
    <li>2) Dropdown Score</li>
    <li>3) Aggiungere button "Save"</li>
    <li>4) Togliere button "Edit"</li>
    <li>5) Visualizzare gli altri dati</li>
</ul>

@if (Session.GetUser().IsTeacher)
{
<div class="row row-title title-margin">
    <div class="col-md-10 col-xs-6">
        <span class="title">Exercise Submissions</span>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <table class="table table-striped table-responsive table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SubmissionDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Student)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Student.Class)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Assignment.Exercise)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Assignment.Exercise.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Assignment.Exercise.Value)
                </th>
                <th>
                    Actions
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.SubmissionDate)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Student.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Student.Class.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Assignment.Exercise.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Assignment.Exercise.Type.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Assignment.Exercise.Value)
                    </td>
                    <td>
                        <a title="View @item.DisplayName"   class="btn btn-default btn-sm action-button" href="@Url.Action("Details", "Submissions", new { AssignmentId = item.AssignmentId, StudentId = item.StudentId })"><i class="glyphicon glyphicon-chevron-right"></i></a>
                    </td>  
                </tr>           
            }

        </table>

    </div>
</div>
}