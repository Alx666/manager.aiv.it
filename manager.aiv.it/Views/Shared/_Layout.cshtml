<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/bootstrap-switch.min.css")
    @Styles.Render("~/Content/jasny-bootstrap.css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Aiv Management", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">

                    @if(Session["Roles"] != null && (Session["Roles"] as List<RoleType>).Contains(RoleType.Admin))
                    {
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Staff" ? "active" : "")">@Html.ActionLink("Staff", "Index", "Users")</li>
                    }

                    @if (Session["Roles"] != null && (Session["Roles"] as List<RoleType>).Contains(RoleType.Secretary))
                    {
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Students" ? "active" : "")">@Html.ActionLink("Students", "Index", "Students")</li>
                    }

                    @if (Session["Roles"] != null && (Session["Roles"] as List<RoleType>).Contains(RoleType.Director))
                    {
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Courses" ? "active" : "")">@Html.ActionLink("Courses", "Index", "Courses")</li>
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Editions" ? "active" : "")">@Html.ActionLink("Editions", "Index", "Editions")</li>
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Classes" ? "active" : "")">@Html.ActionLink("Classes", "Index", "Classes")</li>
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Topics" ? "active" : "")">@Html.ActionLink("Topics", "Index", "Topics")</li>
                    }
                    
                    @if (Session["Roles"] != null && (Session["Roles"] as List<RoleType>).Contains(RoleType.Teacher))
                    {
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Lessons" ? "active" : "")">@Html.ActionLink("Lessons", "Index", "Lessons")</li>
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Exercises" ? "active" : "")">@Html.ActionLink("Exercises", "Index", "Exercises")</li>
                        <li class="@(ViewContext.RouteData.Values["controller"].ToString() == "Assignments" ? "active" : "")">@Html.ActionLink("Assignments", "Index", "Assignments")</li>

                    }
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content @(ViewContext.RouteData.Values["controller"].ToString().ToLower()) @(ViewContext.RouteData.Values["action"].ToString().ToLower())">
        @RenderBody()
        
        <footer>            
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script type="text/javascript" src="~/Scripts/bootstrap-switch.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jasny-bootstrap.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            var switches = $("[switch]");
            if (switches && switches.bootstrapSwitch) {
                switches.bootstrapSwitch();
            }

            var pickers = $(".datepicker");
            if (pickers && pickers.datepicker) {
                pickers.datepicker();
            }

            var tableContainers = $(".table-container");
            var tables = tableContainers.find("table");
            function updateTableIndicators() {
                tables.forEach(function (table) {

                });
            }

            updateTableIndicators();
            

            var header = $(".navbar");
            $(document).bind('scroll', function () {
                var y = $(document).scrollTop();
                
                var headerHeight = header.height();
                var rowTitle = $(".row-title");
                if (headerHeight <= y) {
                    if (!rowTitle.hasClass("yscrolling")) 
                        $(".row-title").addClass("yscrolling");
                    if (!rowTitle.next().hasClass("yscrolling-next-sibling"))
                        rowTitle.next().addClass("yscrolling-next-sibling");
                       
                } else {
                    rowTitle.removeClass("yscrolling");
                    rowTitle.next().removeClass("yscrolling-next-sibling");
                }

                updateTableIndicators();
            });
        });
    </script>
</body>
</html>
